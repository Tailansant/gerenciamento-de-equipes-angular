{"ast":null,"code":"import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport * as TeamsActions from 'src/app/store/actions/teams.actions';\nimport * as TeamsSelectors from 'src/app/store/selectors/teams.selectors';\nimport * as DesignersActions from 'src/app/store/actions/designers.actions';\nimport * as DesignersSelectors from 'src/app/store/selectors/designers.selectors';\nimport * as AuthSelectors from 'src/app/store/selectors/auth.selectors';\nimport { filter, take, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction TeamFormPageComponent_mat_progress_bar_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-bar\", 14);\n  }\n}\n\nfunction TeamFormPageComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Nome \\u00E9 obrigat\\u00F3rio. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TeamFormPageComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Descri\\u00E7\\u00E3o \\u00E9 obrigat\\u00F3ria. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TeamFormPageComponent_mat_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const designer_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", designer_r6.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", designer_r6.name, \" (\", designer_r6.email, \") \");\n  }\n}\n\nfunction TeamFormPageComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Selecione ao menos um projetista. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TeamFormPageComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r7 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Erro: \", error_r7 == null ? null : error_r7.message, \" \");\n  }\n}\n\nexport class TeamFormPageComponent {\n  constructor(fb, store, route, router) {\n    this.fb = fb;\n    this.store = store;\n    this.route = route;\n    this.router = router;\n    this.isEditMode = false;\n    this.teamId = null;\n    this.userCompanyId = null;\n    this.sub = null;\n    this.isLoading$ = this.store.select(TeamsSelectors.selectTeamsLoading);\n    this.error$ = this.store.select(TeamsSelectors.selectTeamsError);\n    this.availableDesigners$ = this.store.select(DesignersSelectors.selectAllDesigners);\n  }\n\n  ngOnInit() {\n    this.teamId = this.route.snapshot.paramMap.get('id');\n    this.isEditMode = !!this.teamId;\n    this.initForm(); // Carrega os designers disponíveis para a empresa do usuário logado\n\n    this.store.select(AuthSelectors.selectUserCompanyId).pipe(filter(companyId => !!companyId), take(1) // Pega o companyId uma vez\n    ).subscribe(companyId => {\n      this.userCompanyId = companyId;\n      this.store.dispatch(DesignersActions.loadDesigners({\n        companyId: this.userCompanyId\n      })); // Se estiver criando, preenche o companyId da equipe automaticamente\n\n      if (!this.isEditMode) {\n        this.teamForm.patchValue({\n          companyId: this.userCompanyId\n        });\n      }\n    });\n\n    if (this.isEditMode && this.teamId) {\n      this.sub = combineLatest([this.store.select(TeamsSelectors.selectAllTeams), this.store.select(AuthSelectors.selectUserCompanyId)]).pipe(filter(([teams, companyId]) => !!companyId), // Garante que companyId existe\n      map(([teams, companyId]) => {\n        this.userCompanyId = companyId; // Garante que companyId está disponível\n\n        return teams.find(t => t.id === this.teamId);\n      }), take(1)).subscribe(team => {\n        if (team) {\n          this.teamForm.patchValue(team); // Certifique-se de que o valor de designerIds é um array de strings para o select\n\n          this.teamForm.get('designerIds')?.patchValue(team.designerIds || []);\n        } else {\n          console.warn('Equipe não encontrada para edição:', this.teamId);\n          this.router.navigate(['/company/teams']);\n        }\n      });\n    }\n  }\n\n  initForm() {\n    this.teamForm = this.fb.group({\n      id: [''],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      companyId: ['', Validators.required],\n      designerIds: [[], Validators.required] // Array de IDs de projetistas\n\n    });\n  }\n\n  onSubmit() {\n    if (this.teamForm.valid) {\n      const team = this.teamForm.value;\n\n      if (this.isEditMode && this.teamId) {\n        this.store.dispatch(TeamsActions.updateTeam({\n          id: this.teamId,\n          team\n        }));\n      } else {\n        this.store.dispatch(TeamsActions.createTeam({\n          team\n        }));\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n\n    this.store.dispatch(TeamsActions.selectTeam({\n      teamId: null\n    }));\n  }\n\n}\n\nTeamFormPageComponent.ɵfac = function TeamFormPageComponent_Factory(t) {\n  return new (t || TeamFormPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Store), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nTeamFormPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TeamFormPageComponent,\n  selectors: [[\"app-team-form-page\"]],\n  decls: 32,\n  vars: 18,\n  consts: [[1, \"container\"], [\"mode\", \"indeterminate\", 4, \"ngIf\"], [1, \"team-form\", 3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"required\", \"\"], [\"formControlName\", \"designerIds\", \"multiple\", \"\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"hidden\", \"formControlName\", \"companyId\"], [1, \"form-actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"mat-button\", \"\", \"routerLink\", \"/company/teams\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"mode\", \"indeterminate\"], [3, \"value\"], [1, \"error-message\"]],\n  template: function TeamFormPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TeamFormPageComponent_mat_progress_bar_3_Template, 1, 0, \"mat-progress-bar\", 1);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function TeamFormPageComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"mat-form-field\", 3)(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Nome da Equipe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵtemplate(10, TeamFormPageComponent_mat_error_10_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-form-field\", 3)(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Descri\\u00E7\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"textarea\", 6);\n      i0.ɵɵtemplate(15, TeamFormPageComponent_mat_error_15_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\", 3)(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Projetistas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"mat-select\", 7);\n      i0.ɵɵtemplate(20, TeamFormPageComponent_mat_option_20_Template, 2, 3, \"mat-option\", 8);\n      i0.ɵɵpipe(21, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, TeamFormPageComponent_mat_error_22_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 9);\n      i0.ɵɵelementStart(24, \"div\", 10)(25, \"button\", 11);\n      i0.ɵɵpipe(26, \"async\");\n      i0.ɵɵtext(27);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 12);\n      i0.ɵɵtext(29, \"Cancelar\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(30, TeamFormPageComponent_div_30_Template, 2, 1, \"div\", 13);\n      i0.ɵɵpipe(31, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_6_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Editar Equipe\" : \"Adicionar Equipe\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 10, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.teamForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.teamForm.get(\"name\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx.teamForm.get(\"name\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.teamForm.get(\"description\")) == null ? null : tmp_4_0.hasError(\"required\")) && ((tmp_4_0 = ctx.teamForm.get(\"description\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(21, 12, ctx.availableDesigners$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.teamForm.get(\"designerIds\")) == null ? null : tmp_6_0.hasError(\"required\")) && ((tmp_6_0 = ctx.teamForm.get(\"designerIds\")) == null ? null : tmp_6_0.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.teamForm.invalid || i0.ɵɵpipeBind1(26, 14, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Salvar Altera\\u00E7\\u00F5es\" : \"Criar Equipe\", \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(31, 16, ctx.error$));\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i4.AsyncPipe],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 30:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: Can't find stylesheet to import.\\\\n  \\u2577\\\\n1 \\u2502 @import '../../admin/pages/company-form-page/company-form-page.component.scss';\\\\n  \\u2502         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\\\n  \\u2575\\\\n  src\\\\\\\\app\\\\\\\\company\\\\\\\\pages\\\\\\\\team-form-page\\\\\\\\team-form-page.component.scss 1:9  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[30]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});","map":{"version":3,"mappings":"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","names":["FormBuilder","FormGroup","Validators","combineLatest","TeamsActions","TeamsSelectors","DesignersActions","DesignersSelectors","AuthSelectors","filter","take","map","i0","TeamFormPageComponent","constructor","fb","store","route","router","isLoading$","select","selectTeamsLoading","error$","selectTeamsError","availableDesigners$","selectAllDesigners","ngOnInit","teamId","snapshot","paramMap","get","isEditMode","initForm","selectUserCompanyId","pipe","companyId","subscribe","userCompanyId","dispatch","loadDesigners","teamForm","patchValue","sub","selectAllTeams","teams","find","t","id","team","designerIds","console","warn","navigate","group","name","required","description","onSubmit","valid","value","updateTeam","createTeam","ngOnDestroy","unsubscribe","selectTeam","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\project-management-app-main\\project-management-app-main\\project-management-app\\src\\app\\company\\pages\\team-form-page\\team-form-page.component.ts","E:\\project-management-app-main\\project-management-app-main\\project-management-app\\src\\app\\company\\pages\\team-form-page\\team-form-page.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subscription, combineLatest } from 'rxjs';\r\nimport { Team } from 'src/app/core/models/team.model';\r\nimport { Designer } from 'src/app/core/models/designer.model';\r\nimport * as TeamsActions from 'src/app/store/actions/teams.actions';\r\nimport * as TeamsSelectors from 'src/app/store/selectors/teams.selectors';\r\nimport * as DesignersActions from 'src/app/store/actions/designers.actions';\r\nimport * as DesignersSelectors from 'src/app/store/selectors/designers.selectors';\r\nimport * as AuthSelectors from 'src/app/store/selectors/auth.selectors';\r\nimport { filter, take, map, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-team-form-page',\r\n    templateUrl: './team-form-page.component.html',\r\n    styleUrls: ['./team-form-page.component.scss']\r\n})\r\nexport class TeamFormPageComponent implements OnInit, OnDestroy {\r\n    teamForm!: FormGroup;\r\n    isEditMode: boolean = false;\r\n    teamId: string | null = null;\r\n    isLoading$: Observable<boolean>;\r\n    error$: Observable<any>;\r\n    availableDesigners$: Observable<Designer[]>; // Projetistas disponíveis para seleção\r\n    private userCompanyId: string | null = null;\r\n    private sub: Subscription | null = null;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private store: Store,\r\n        private route: ActivatedRoute,\r\n        private router: Router\r\n    ) {\r\n        this.isLoading$ = this.store.select(TeamsSelectors.selectTeamsLoading);\r\n        this.error$ = this.store.select(TeamsSelectors.selectTeamsError);\r\n        this.availableDesigners$ = this.store.select(DesignersSelectors.selectAllDesigners);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.teamId = this.route.snapshot.paramMap.get('id');\r\n        this.isEditMode = !!this.teamId;\r\n\r\n        this.initForm();\r\n\r\n        // Carrega os designers disponíveis para a empresa do usuário logado\r\n        this.store.select(AuthSelectors.selectUserCompanyId)\r\n            .pipe(\r\n                filter(companyId => !!companyId),\r\n                take(1) // Pega o companyId uma vez\r\n            ).subscribe(companyId => {\r\n                this.userCompanyId = companyId;\r\n                this.store.dispatch(DesignersActions.loadDesigners({ companyId: this.userCompanyId }));\r\n\r\n                // Se estiver criando, preenche o companyId da equipe automaticamente\r\n                if (!this.isEditMode) {\r\n                    this.teamForm.patchValue({ companyId: this.userCompanyId });\r\n                }\r\n            });\r\n\r\n\r\n        if (this.isEditMode && this.teamId) {\r\n            this.sub = combineLatest([\r\n                this.store.select(TeamsSelectors.selectAllTeams),\r\n                this.store.select(AuthSelectors.selectUserCompanyId)\r\n            ])\r\n                .pipe(\r\n                    filter(([teams, companyId]) => !!companyId), // Garante que companyId existe\r\n                    map(([teams, companyId]) => {\r\n                        this.userCompanyId = companyId; // Garante que companyId está disponível\r\n                        return teams.find(t => t.id === this.teamId);\r\n                    }),\r\n                    take(1)\r\n                )\r\n                .subscribe(team => {\r\n                    if (team) {\r\n                        this.teamForm.patchValue(team);\r\n                        // Certifique-se de que o valor de designerIds é um array de strings para o select\r\n                        this.teamForm.get('designerIds')?.patchValue(team.designerIds || []);\r\n                    } else {\r\n                        console.warn('Equipe não encontrada para edição:', this.teamId);\r\n                        this.router.navigate(['/company/teams']);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    initForm(): void {\r\n        this.teamForm = this.fb.group({\r\n            id: [''],\r\n            name: ['', Validators.required],\r\n            description: ['', Validators.required],\r\n            companyId: ['', Validators.required],\r\n            designerIds: [[] as string[], Validators.required] // Array de IDs de projetistas\r\n        });\r\n    }\r\n\r\n    onSubmit(): void {\r\n        if (this.teamForm.valid) {\r\n            const team: Team = this.teamForm.value;\r\n            if (this.isEditMode && this.teamId) {\r\n                this.store.dispatch(TeamsActions.updateTeam({ id: this.teamId, team }));\r\n            } else {\r\n                this.store.dispatch(TeamsActions.createTeam({ team }));\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.sub) {\r\n            this.sub.unsubscribe();\r\n        }\r\n        this.store.dispatch(TeamsActions.selectTeam({ teamId: null }));\r\n    }\r\n}","<div class=\"container\">\r\n    <h2>{{ isEditMode ? 'Editar Equipe' : 'Adicionar Equipe' }}</h2>\r\n\r\n    <mat-progress-bar *ngIf=\"isLoading$ | async\" mode=\"indeterminate\"></mat-progress-bar>\r\n\r\n    <form [formGroup]=\"teamForm\" (ngSubmit)=\"onSubmit()\" class=\"team-form\">\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Nome da Equipe</mat-label>\r\n            <input matInput formControlName=\"name\" required>\r\n            <mat-error *ngIf=\"teamForm.get('name')?.hasError('required') && teamForm.get('name')?.touched\">\r\n                Nome é obrigatório.\r\n            </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Descrição</mat-label>\r\n            <textarea matInput formControlName=\"description\" required></textarea>\r\n            <mat-error\r\n                *ngIf=\"teamForm.get('description')?.hasError('required') && teamForm.get('description')?.touched\">\r\n                Descrição é obrigatória.\r\n            </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Projetistas</mat-label>\r\n            <mat-select formControlName=\"designerIds\" multiple required>\r\n                <mat-option *ngFor=\"let designer of (availableDesigners$ | async)\" [value]=\"designer.id\">\r\n                    {{designer.name}} ({{designer.email}})\r\n                </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n                *ngIf=\"teamForm.get('designerIds')?.hasError('required') && teamForm.get('designerIds')?.touched\">\r\n                Selecione ao menos um projetista.\r\n            </mat-error>\r\n        </mat-form-field>\r\n\r\n        <input type=\"hidden\" formControlName=\"companyId\">\r\n\r\n        <div class=\"form-actions\">\r\n            <button mat-raised-button color=\"primary\" type=\"submit\"\r\n                [disabled]=\"teamForm.invalid || (isLoading$ | async)\">\r\n                {{ isEditMode ? 'Salvar Alterações' : 'Criar Equipe' }}\r\n            </button>\r\n            <button mat-button routerLink=\"/company/teams\">Cancelar</button>\r\n        </div>\r\n    </form>\r\n\r\n    <div *ngIf=\"error$ | async as error\" class=\"error-message\">\r\n        Erro: {{ error?.message }}\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module"}