{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { NavigationEnd } from '@angular/router'; // NavigationEnd para escutar mudanças de rota\n\nimport { Subscription } from 'rxjs'; // Imports para internacionalização (angular-l10n)\n\nimport { L10N_CONFIG, L10N_LOCALE } from 'angular-l10n';\nimport { Languages } from '../../constants/l10n-config'; // Verifique o caminho\n\nimport { i18nAsset } from '../../constants/i18n'; // Verifique o caminho\n// Imports de ações e seletores NgRx\n\nimport { logout, updateAuthStateFromLocalStorage } from 'src/app/store/actions/auth.actions'; // Caminho para auth.actions\n\nimport { startSearchState } from 'src/app/store/actions/search.actions'; // Caminho para search.actions\n\nimport * as AuthSelectors from 'src/app/store/selectors/auth.selectors'; // Caminho para auth.selectors\n\nimport { getLoadStatus, getMessage, setMessage } from 'src/app/store/selectors/notifications.selectors'; // Caminho para notifications.selectors\n// Componentes Shared\n\nimport { NotificationSnackBarComponent } from 'src/app/shared/components/notification-snack-bar/notification-snack-bar.component'; // Caminho para o snack-bar\n\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"angular-l10n\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/toolbar\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/tooltip\";\nimport * as i13 from \"@angular/material/input\";\nimport * as i14 from \"@angular/material/progress-spinner\";\nconst _c0 = [\"langs\"];\nconst _c1 = [\"searchInput\"];\n\nfunction HeaderComponent_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"form\", 11)(2, \"mat-form-field\", 12)(3, \"input\", 13, 14);\n    i0.ɵɵlistener(\"keyup\", function HeaderComponent_ng_container_14_Template_input_keyup_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.search());\n    });\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind2(5, 1, \"header.taskSearchInputPH\", ctx_r1.locale.language));\n  }\n}\n\nfunction HeaderComponent_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 15);\n    i0.ɵɵtext(2, \" header.btnBoards \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction HeaderComponent_ng_container_20_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 20);\n    i0.ɵɵtext(2, \"Administra\\u00E7\\u00E3o\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-menu\", null, 21)(5, \"button\", 22);\n    i0.ɵɵtext(6, \"Gerenciar Empresas\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r11 = i0.ɵɵreference(4);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r11);\n  }\n}\n\nfunction HeaderComponent_ng_container_20_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 20);\n    i0.ɵɵtext(2, \"Empresa\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-menu\", null, 23)(5, \"button\", 24);\n    i0.ɵɵtext(6, \"Gerenciar Projetistas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 25);\n    i0.ɵɵtext(8, \"Gerenciar Equipes\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r12 = i0.ɵɵreference(4);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r12);\n  }\n}\n\nfunction HeaderComponent_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, HeaderComponent_ng_container_20_ng_container_1_Template, 7, 1, \"ng-container\", 16);\n    i0.ɵɵtemplate(2, HeaderComponent_ng_container_20_ng_container_2_Template, 9, 1, \"ng-container\", 16);\n    i0.ɵɵelementStart(3, \"button\", 17);\n    i0.ɵɵtext(4, \"Minha Conta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 18);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementStart(7, \"mat-icon\");\n    i0.ɵɵtext(8, \"account_circle\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function HeaderComponent_ng_container_20_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onLogout());\n    });\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵelementStart(11, \"mat-icon\");\n    i0.ɵɵtext(12, \"logout\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appRoleHasPermission\", \"admin\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appRoleHasPermission\", \"company\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind2(6, 4, \"header.btnEditTooltip\", ctx_r3.locale.language));\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind2(10, 7, \"header.btnLogOutTooltip\", ctx_r3.locale.language));\n  }\n}\n\nfunction HeaderComponent_ng_container_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 26);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"login\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"button\", 27);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementStart(7, \"mat-icon\");\n    i0.ɵɵtext(8, \"add_circle\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind2(2, 2, \"header.btnLogInTooltip\", ctx_r4.locale.language));\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", i0.ɵɵpipeBind2(6, 5, \"header.btnCreateTooltip\", ctx_r4.locale.language));\n  }\n}\n\nfunction HeaderComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelement(1, \"mat-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst SNACK_BAR_TIME_DELAY_MS = 1500;\nexport class HeaderComponent {\n  constructor(store, dialog, // Mantido caso haja modais no header\n  snackBar, locale, // Para o pipe translate no template\n  l10nConfig, translation, router) {\n    this.store = store;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.locale = locale;\n    this.l10nConfig = l10nConfig;\n    this.translation = translation;\n    this.router = router; // Propriedades de estado do componente\n\n    this.isLogged = false; // Pode ser derivado de isLoggedIn$ se preferir\n\n    this.isLoad = false;\n    this.isBoardsRoute = false;\n    this.isSearchRoute = false;\n    this.userId = ''; // Usado para a pesquisa\n    // Propriedades de internacionalização\n\n    this.lang = this.translation.getLocale().language.toUpperCase();\n    this.schema = this.l10nConfig.schema;\n    this.EN = this.schema[0].locale;\n    this.RU = this.schema[1].locale; // Gerenciamento de subscriptions\n\n    this.subscription = new Subscription();\n  }\n\n  ngOnInit() {\n    // Dispatch para atualizar estado de autenticação do localStorage (boa prática inicial)\n    this.store.dispatch(updateAuthStateFromLocalStorage()); // Observar o status de autenticação e o papel do usuário\n\n    this.isLoggedIn$ = this.store.select(AuthSelectors.selectIsAuthenticated);\n    this.userRole$ = this.store.select(AuthSelectors.selectUserRole); // Mantenha a sincronização de `isLogged` para compatibilidade se ainda for usada diretamente\n    // Idealmente, o template usaria `isLoggedIn$ | async` diretamente\n\n    const subIsLogged = this.isLoggedIn$.subscribe(logged => {\n      this.isLogged = logged;\n    });\n    this.subscription.add(subIsLogged); // Escutar eventos de navegação para atualizar rotas\n\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const {\n          url\n        } = event;\n        this.isBoardsRoute = url === '/boards';\n        this.isSearchRoute = url.startsWith('/boards/search'); // Pode ser /boards/search ou /boards/search?param\n      }\n    }); // Subscrição para o ID do usuário (para pesquisa, etc.)\n\n    const subUserId = this.store.select(AuthSelectors.getUserId).subscribe(id => {\n      if (id) {\n        this.userId = id;\n      } else {\n        this.userId = ''; // Limpar userId se não estiver logado\n      }\n    });\n    this.subscription.add(subUserId); // Subscrição para mensagens de notificação (snack bar)\n\n    const subMsg = this.store.select(getMessage).subscribe(msg => {\n      if (msg) {\n        this.snackBar.openFromComponent(NotificationSnackBarComponent, {\n          data: msg,\n          duration: SNACK_BAR_TIME_DELAY_MS\n        });\n        this.store.dispatch(setMessage({\n          msg: null\n        })); // Limpa a mensagem após exibir\n      }\n    });\n    this.subscription.add(subMsg); // Subscrição para o status de carregamento\n\n    const subLoad = this.store.select(getLoadStatus).subscribe(status => {\n      this.isLoad = status;\n    });\n    this.subscription.add(subLoad); // Lógica de internacionalização (configuração inicial e carregamento)\n\n    if (localStorage.getItem('lang')) {\n      this.lang = localStorage.getItem('lang');\n      if (this.lang === Languages.english) this.translation.setLocale(this.EN);\n      if (this.lang === Languages.russian) this.translation.setLocale(this.RU);\n    } else {\n      localStorage.setItem('lang', this.lang); // Garante que um idioma padrão seja salvo\n    }\n\n    this.translation.addProviders([{\n      name: 'lazy',\n      asset: i18nAsset\n    }]);\n    this.translation.loadTranslation([{\n      name: 'lazy',\n      asset: i18nAsset\n    }]);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe(); // Evita vazamento de memória\n  } // Método de logout (chamado pelo template)\n\n\n  onLogout() {\n    this.store.dispatch(logout()); // Dispara a ação de logout\n\n    this.router.navigate(['/auth/sign-in']); // Redireciona após o logout\n  } // Método para mudar o idioma\n\n\n  setLocale() {\n    const selectedLang = this.langs.nativeElement.value;\n\n    if (selectedLang === Languages.english) {\n      this.translation.setLocale(this.EN);\n      this.lang = Languages.english;\n    } else if (selectedLang === Languages.russian) {\n      // Use else if para garantir apenas uma condição\n      this.translation.setLocale(this.RU);\n      this.lang = Languages.russian;\n    }\n\n    localStorage.setItem('lang', this.lang);\n  } // Método para iniciar a pesquisa\n\n\n  search() {\n    this.store.dispatch(startSearchState({\n      userId: this.userId,\n      value: this.searchValue.nativeElement.value\n    }));\n  }\n\n}\n\nHeaderComponent.ɵfac = function HeaderComponent_Factory(t) {\n  return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(L10N_LOCALE), i0.ɵɵdirectiveInject(L10N_CONFIG), i0.ɵɵdirectiveInject(i4.L10nTranslationService), i0.ɵɵdirectiveInject(i5.Router));\n};\n\nHeaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HeaderComponent,\n  selectors: [[\"app-header\"]],\n  viewQuery: function HeaderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.langs = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchValue = _t.first);\n    }\n  },\n  decls: 25,\n  vars: 15,\n  consts: [[\"color\", \"primary\", 1, \"header\"], [\"routerLink\", \"/\", 1, \"logo\"], [1, \"spacer\"], [1, \"header__select\"], [\"matNativeControl\", \"\", \"required\", \"\", 1, \"header__lang\", 3, \"change\"], [\"langs\", \"\"], [\"value\", \"EN\", 3, \"selected\"], [\"value\", \"RU\", 3, \"selected\"], [4, \"ngIf\"], [\"mat-button\", \"\", \"routerLink\", \"/boards\"], [\"class\", \"loading\", 4, \"ngIf\"], [1, \"search\"], [\"appearance\", \"fill\", 1, \"search__input\"], [\"type\", \"search\", \"matInput\", \"\", 3, \"placeholder\", \"keyup\"], [\"searchInput\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"routerLink\", \"/boards\", \"l10nTranslate\", \"\"], [4, \"appRoleHasPermission\"], [\"mat-button\", \"\", \"routerLink\", \"/account\"], [\"mat-button\", \"\", \"routerLink\", \"/login/profile\", 1, \"header__btn--profile\", 3, \"matTooltip\"], [\"mat-button\", \"\", 1, \"header__btn--logout\", 3, \"matTooltip\", \"click\"], [\"mat-button\", \"\", 3, \"matMenuTriggerFor\"], [\"adminMenu\", \"matMenu\"], [\"mat-menu-item\", \"\", \"routerLink\", \"/admin/companies\"], [\"companyMenu\", \"matMenu\"], [\"mat-menu-item\", \"\", \"routerLink\", \"/company/designers\"], [\"mat-menu-item\", \"\", \"routerLink\", \"/company/teams\"], [\"mat-button\", \"\", \"routerLink\", \"/auth/sign-in\", 1, \"header__btn--profile\", 3, \"matTooltip\"], [\"mat-button\", \"\", \"routerLink\", \"/auth/sign-up\", 1, \"header__btn--logout\", 3, \"matTooltip\"], [1, \"loading\"]],\n  template: function HeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"span\")(2, \"a\", 1);\n      i0.ɵɵtext(3, \"Meu App\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(4, \"span\", 2);\n      i0.ɵɵelementStart(5, \"mat-form-field\", 3)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Idioma\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 4, 5);\n      i0.ɵɵlistener(\"change\", function HeaderComponent_Template_select_change_8_listener() {\n        return ctx.setLocale();\n      });\n      i0.ɵɵelementStart(10, \"option\", 6);\n      i0.ɵɵtext(11, \"EN\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"option\", 7);\n      i0.ɵɵtext(13, \"RU\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(14, HeaderComponent_ng_container_14_Template, 6, 4, \"ng-container\", 8);\n      i0.ɵɵpipe(15, \"async\");\n      i0.ɵɵtemplate(16, HeaderComponent_ng_container_16_Template, 3, 0, \"ng-container\", 8);\n      i0.ɵɵpipe(17, \"async\");\n      i0.ɵɵelementStart(18, \"button\", 9);\n      i0.ɵɵtext(19, \"Quadros\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, HeaderComponent_ng_container_20_Template, 13, 10, \"ng-container\", 8);\n      i0.ɵɵpipe(21, \"async\");\n      i0.ɵɵtemplate(22, HeaderComponent_ng_container_22_Template, 9, 8, \"ng-container\", 8);\n      i0.ɵɵpipe(23, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, HeaderComponent_div_24_Template, 2, 0, \"div\", 10);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"selected\", ctx.lang === \"EN\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"selected\", ctx.lang === \"RU\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(15, 7, ctx.isLoggedIn$) && (ctx.isBoardsRoute || ctx.isSearchRoute));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(17, 9, ctx.isLoggedIn$) && !ctx.isBoardsRoute);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(21, 11, ctx.isLoggedIn$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpipeBind1(23, 13, ctx.isLoggedIn$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoad);\n    }\n  },\n  dependencies: [i6.NgIf, i7.MatButton, i8.MatToolbar, i9.ɵNgNoValidate, i9.NgSelectOption, i9.ɵNgSelectMultipleOption, i9.NgControlStatusGroup, i9.NgForm, i10.MatFormField, i10.MatLabel, i11.MatIcon, i12.MatTooltip, i13.MatInput, i5.RouterLink, i5.RouterLinkWithHref, i14.MatProgressSpinner, i4.L10nTranslateDirective, i6.AsyncPipe, i4.L10nTranslatePipe],\n  styles: [\".header[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  height: 10vh;\\n  padding: 10px;\\n}\\n@media screen and (max-width: 580px) {\\n  .header[_ngcontent-%COMP%] {\\n    height: max-content;\\n    flex-wrap: wrap;\\n  }\\n}\\n.header__lang[_ngcontent-%COMP%] {\\n  padding: 3px;\\n  border-radius: 5px;\\n  background-color: #fff;\\n  color: #000;\\n  width: max-content;\\n}\\n.header__login[_ngcontent-%COMP%] {\\n  margin-left: auto;\\n}\\n.header__select[_ngcontent-%COMP%] {\\n  max-width: 45px;\\n}\\n.loading[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 5000;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n@media screen and (max-width: 580px) {\\n  .search[_ngcontent-%COMP%] {\\n    order: 1;\\n    width: 80vw;\\n    margin: 0 auto;\\n  }\\n}\\n.search__input[_ngcontent-%COMP%] {\\n  border-radius: 10px;\\n  padding-left: 5px;\\n  width: 30vw;\\n}\\n.search__input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder {\\n  color: #fff;\\n}\\n@media screen and (max-width: 800px) {\\n  .search__input[_ngcontent-%COMP%] {\\n    width: 40vw;\\n  }\\n}\\n@media screen and (max-width: 580px) {\\n  .search__input[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSw4QkFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0FBQ0Y7QUFDRTtFQVJGO0lBU0ksbUJBQUE7SUFDQSxlQUFBO0VBRUY7QUFDRjtBQUFFO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUFFSjtBQUNFO0VBQ0UsaUJBQUE7QUFDSjtBQUVFO0VBQ0UsZUFBQTtBQUFKO0FBSUE7RUFDRSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUFERjtBQUtFO0VBREY7SUFFSSxRQUFBO0lBQ0EsV0FBQTtJQUNBLGNBQUE7RUFERjtBQUNGO0FBRUU7RUFDRSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsV0FBQTtBQUFKO0FBRUk7RUFDRSxXQUFBO0FBQU47QUFHSTtFQVRGO0lBVUksV0FBQTtFQUFKO0FBQ0Y7QUFDSTtFQVpGO0lBYUksV0FBQTtFQUVKO0FBQ0YiLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGhlaWdodDogMTB2aDtcbiAgcGFkZGluZzogMTBweDtcblxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1ODBweCkge1xuICAgIGhlaWdodDogbWF4LWNvbnRlbnQ7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG5cbiAgJl9fbGFuZyB7XG4gICAgcGFkZGluZzogM3B4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGNvbG9yOiAjMDAwO1xuICAgIHdpZHRoOiBtYXgtY29udGVudDtcbiAgfVxuXG4gICZfX2xvZ2luIHtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgfVxuXG4gICZfX3NlbGVjdCB7XG4gICAgbWF4LXdpZHRoOiA0NXB4O1xuICB9XG59XG5cbi5sb2FkaW5nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDUwMDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uc2VhcmNoIHtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTgwcHgpIHtcbiAgICBvcmRlcjogMTtcbiAgICB3aWR0aDogODB2dztcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxuICAmX19pbnB1dCB7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgICB3aWR0aDogMzB2dztcblxuICAgIGlucHV0OjpwbGFjZWhvbGRlciB7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgd2lkdGg6IDQwdnc7XG4gICAgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU4MHB4KSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["ElementRef","NavigationEnd","Subscription","L10N_CONFIG","L10N_LOCALE","Languages","i18nAsset","logout","updateAuthStateFromLocalStorage","startSearchState","AuthSelectors","getLoadStatus","getMessage","setMessage","NotificationSnackBarComponent","i0","SNACK_BAR_TIME_DELAY_MS","HeaderComponent","constructor","store","dialog","snackBar","locale","l10nConfig","translation","router","getLocale","language","toUpperCase","schema","ngOnInit","dispatch","isLoggedIn$","select","selectIsAuthenticated","userRole$","selectUserRole","subIsLogged","subscribe","logged","isLogged","subscription","add","events","event","url","isBoardsRoute","isSearchRoute","startsWith","subUserId","getUserId","id","userId","subMsg","msg","openFromComponent","data","duration","subLoad","status","isLoad","localStorage","getItem","lang","english","setLocale","EN","russian","RU","setItem","addProviders","name","asset","loadTranslation","ngOnDestroy","unsubscribe","onLogout","navigate","selectedLang","langs","nativeElement","value","search","searchValue","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["E:\\project-management-app-main\\project-management-app-main\\project-management-app\\src\\app\\core\\components\\header\\header.component.ts","E:\\project-management-app-main\\project-management-app-main\\project-management-app\\src\\app\\core\\components\\header\\header.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router'; // NavigationEnd para escutar mudanças de rota\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators'; // Operador map para Observables\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n// Imports para internacionalização (angular-l10n)\nimport {\n  L10N_CONFIG,\n  L10nConfig,\n  L10N_LOCALE,\n  L10nLocale,\n  L10nTranslationService,\n} from 'angular-l10n';\nimport { L10nSchema } from 'angular-l10n/lib/models/types';\nimport { Languages } from '../../constants/l10n-config'; // Verifique o caminho\nimport { i18nAsset } from '../../constants/i18n'; // Verifique o caminho\n\n// Imports de ações e seletores NgRx\nimport { logout, updateAuthStateFromLocalStorage } from 'src/app/store/actions/auth.actions'; // Caminho para auth.actions\nimport { startSearchState } from 'src/app/store/actions/search.actions'; // Caminho para search.actions\nimport * as AuthSelectors from 'src/app/store/selectors/auth.selectors'; // Caminho para auth.selectors\nimport { getLoadStatus, getMessage, setMessage } from 'src/app/store/selectors/notifications.selectors'; // Caminho para notifications.selectors\n\n// Componentes Shared\nimport { NotificationSnackBarComponent } from 'src/app/shared/components/notification-snack-bar/notification-snack-bar.component'; // Caminho para o snack-bar\n\nconst SNACK_BAR_TIME_DELAY_MS = 1500;\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  // Propriedades do NgRx (isLoggedIn$, userRole$)\n  isLoggedIn$!: Observable<boolean>; // Assumindo que você quer Observable para o template\n  userRole$!: Observable<string | null>; // Para a diretiva *appRoleHasPermission\n\n  // Propriedades de estado do componente\n  isLogged = false; // Pode ser derivado de isLoggedIn$ se preferir\n  isLoad = false;\n  isBoardsRoute = false;\n  isSearchRoute = false;\n  userId = ''; // Usado para a pesquisa\n\n  // Propriedades de internacionalização\n  lang: string | null = this.translation.getLocale().language.toUpperCase();\n  schema: L10nSchema[] = this.l10nConfig.schema;\n  EN = this.schema[0].locale;\n  RU = this.schema[1].locale;\n\n  // ViewChild para elementos do DOM\n  @ViewChild('langs') langs!: ElementRef;\n  @ViewChild('searchInput') searchValue!: ElementRef;\n\n  // Gerenciamento de subscriptions\n  subscription = new Subscription();\n\n  constructor(\n    private store: Store,\n    public dialog: MatDialog, // Mantido caso haja modais no header\n    private snackBar: MatSnackBar,\n    @Inject(L10N_LOCALE) public locale: L10nLocale, // Para o pipe translate no template\n    @Inject(L10N_CONFIG) private l10nConfig: L10nConfig,\n    private translation: L10nTranslationService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    // Dispatch para atualizar estado de autenticação do localStorage (boa prática inicial)\n    this.store.dispatch(updateAuthStateFromLocalStorage());\n\n    // Observar o status de autenticação e o papel do usuário\n    this.isLoggedIn$ = this.store.select(AuthSelectors.selectIsAuthenticated);\n    this.userRole$ = this.store.select(AuthSelectors.selectUserRole);\n\n    // Mantenha a sincronização de `isLogged` para compatibilidade se ainda for usada diretamente\n    // Idealmente, o template usaria `isLoggedIn$ | async` diretamente\n    const subIsLogged = this.isLoggedIn$.subscribe((logged) => {\n        this.isLogged = logged;\n    });\n    this.subscription.add(subIsLogged);\n\n    // Escutar eventos de navegação para atualizar rotas\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const { url } = event;\n        this.isBoardsRoute = url === '/boards';\n        this.isSearchRoute = url.startsWith('/boards/search'); // Pode ser /boards/search ou /boards/search?param\n      }\n    });\n\n    // Subscrição para o ID do usuário (para pesquisa, etc.)\n    const subUserId = this.store.select(AuthSelectors.getUserId).subscribe((id) => {\n      if (id) {\n        this.userId = id;\n      } else {\n        this.userId = ''; // Limpar userId se não estiver logado\n      }\n    });\n    this.subscription.add(subUserId);\n\n    // Subscrição para mensagens de notificação (snack bar)\n    const subMsg = this.store.select(getMessage).subscribe((msg) => {\n      if (msg) {\n        this.snackBar.openFromComponent(NotificationSnackBarComponent, {\n          data: msg,\n          duration: SNACK_BAR_TIME_DELAY_MS,\n        });\n        this.store.dispatch(setMessage({ msg: null })); // Limpa a mensagem após exibir\n      }\n    });\n    this.subscription.add(subMsg);\n\n    // Subscrição para o status de carregamento\n    const subLoad = this.store.select(getLoadStatus).subscribe((status) => {\n      this.isLoad = status;\n    });\n    this.subscription.add(subLoad);\n\n    // Lógica de internacionalização (configuração inicial e carregamento)\n    if (localStorage.getItem('lang')) {\n      this.lang = localStorage.getItem('lang');\n      if (this.lang === Languages.english) this.translation.setLocale(this.EN);\n      if (this.lang === Languages.russian) this.translation.setLocale(this.RU);\n    } else {\n      localStorage.setItem('lang', this.lang!); // Garante que um idioma padrão seja salvo\n    }\n    this.translation.addProviders([{ name: 'lazy', asset: i18nAsset }]);\n    this.translation.loadTranslation([{ name: 'lazy', asset: i18nAsset }]);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe(); // Evita vazamento de memória\n  }\n\n  // Método de logout (chamado pelo template)\n  onLogout(): void { // Renomeado para 'onLogout' para consistência com o template\n    this.store.dispatch(logout()); // Dispara a ação de logout\n    this.router.navigate(['/auth/sign-in']); // Redireciona após o logout\n  }\n\n  // Método para mudar o idioma\n  setLocale(): void {\n    const selectedLang = this.langs.nativeElement.value;\n    if (selectedLang === Languages.english) {\n      this.translation.setLocale(this.EN);\n      this.lang = Languages.english;\n    } else if (selectedLang === Languages.russian) { // Use else if para garantir apenas uma condição\n      this.translation.setLocale(this.RU);\n      this.lang = Languages.russian;\n    }\n    localStorage.setItem('lang', this.lang!);\n  }\n\n  // Método para iniciar a pesquisa\n  search() {\n    this.store.dispatch(\n      startSearchState({ userId: this.userId, value: this.searchValue.nativeElement.value }),\n    );\n  }\n}","<mat-toolbar class=\"header\" color=\"primary\">\n  <span><a routerLink=\"/\" class=\"logo\">Meu App</a></span>\n\n  <span class=\"spacer\"></span>\n\n  <mat-form-field class=\"header__select\">\n    <mat-label>Idioma</mat-label>\n    <select matNativeControl #langs required class=\"header__lang\" (change)=\"setLocale()\">\n      <option value=\"EN\" [selected]=\"lang === 'EN'\">EN</option>\n      <option value=\"RU\" [selected]=\"lang === 'RU'\">RU</option>\n      </select>\n  </mat-form-field>\n\n  <ng-container *ngIf=\"(isLoggedIn$ | async) && (isBoardsRoute || isSearchRoute)\">\n    <form class=\"search\">\n      <mat-form-field class=\"search__input\" appearance=\"fill\">\n        <input type=\"search\" #searchInput matInput placeholder=\"{{ 'header.taskSearchInputPH' | translate:locale.language }}\" (keyup)=\"search()\">\n      </mat-form-field>\n    </form>\n  </ng-container>\n\n  <ng-container *ngIf=\"(isLoggedIn$ | async) && !isBoardsRoute\">\n    <button mat-raised-button color=\"accent\" routerLink=\"/boards\" l10nTranslate>\n      header.btnBoards\n    </button>\n  </ng-container>\n\n  <button mat-button routerLink=\"/boards\">Quadros</button>\n\n  <ng-container *ngIf=\"isLoggedIn$ | async\">\n    <ng-container *appRoleHasPermission=\"'admin'\">\n      <button mat-button [matMenuTriggerFor]=\"adminMenu\">Administração</button>\n      <mat-menu #adminMenu=\"matMenu\">\n        <button mat-menu-item routerLink=\"/admin/companies\">Gerenciar Empresas</button>\n      </mat-menu>\n    </ng-container>\n\n    <ng-container *appRoleHasPermission=\"'company'\">\n      <button mat-button [matMenuTriggerFor]=\"companyMenu\">Empresa</button>\n      <mat-menu #companyMenu=\"matMenu\">\n        <button mat-menu-item routerLink=\"/company/designers\">Gerenciar Projetistas</button>\n        <button mat-menu-item routerLink=\"/company/teams\">Gerenciar Equipes</button>\n      </mat-menu>\n    </ng-container>\n\n    <button mat-button routerLink=\"/account\">Minha Conta</button>\n    <button mat-button class=\"header__btn--profile\"\n        matTooltip=\"{{ 'header.btnEditTooltip' | translate:locale.language }}\"\n        routerLink=\"/login/profile\">\n        <mat-icon>account_circle</mat-icon>\n    </button>\n    <button mat-button class=\"header__btn--logout\"\n        matTooltip=\"{{ 'header.btnLogOutTooltip' | translate:locale.language }}\" (click)=\"onLogout()\">\n        <mat-icon>logout</mat-icon>\n    </button>\n  </ng-container>\n\n  <ng-container *ngIf=\"!(isLoggedIn$ | async)\">\n    <button mat-button class=\"header__btn--profile\"\n        matTooltip=\"{{ 'header.btnLogInTooltip' | translate:locale.language }}\"\n        routerLink=\"/auth/sign-in\">\n        <mat-icon>login</mat-icon>\n    </button>\n    <button mat-button class=\"header__btn--logout\"\n        matTooltip=\"{{ 'header.btnCreateTooltip' | translate:locale.language }}\"\n        routerLink=\"/auth/sign-up\">\n        <mat-icon>add_circle</mat-icon>\n    </button>\n  </ng-container>\n</mat-toolbar>\n\n<div class=\"loading\" *ngIf=\"isLoad\">\n  <mat-spinner></mat-spinner>\n</div>"]},"metadata":{},"sourceType":"module"}